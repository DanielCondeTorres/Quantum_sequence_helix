import numpy as np

# Mapping de 3 letras â†’ 1 letra
aa_map = {
    "ALA": "A", "ARG": "R", "ASN": "N", "ASP": "D", "CYS": "C",
    "GLN": "Q", "GLU": "E", "GLY": "G", "HIS": "H", "ILE": "I",
    "LEU": "L", "LYS": "K", "MET": "M", "PHE": "F", "PRO": "P",
    "SER": "S", "THR": "T", "TRP": "W", "TYR": "Y", "VAL": "V"
}

# Amino acid order (3 letras, como en la imagen original)
aa_order_3 = [
    "ALA", "GLY", "SER", "THR", "ASN", "ASP", "GLN", "GLU", "HIS", "LYS",
    "ARG", "TYR", "PHE", "TRP", "VAL", "ILE", "MET", "LEU", "TYR", "VAL",
    "CYS","PRO"]

# Convertimos a 1 letra
aa_order_1 = [aa_map[aa] for aa in aa_order_3]

# Matriz (igual que antes)
M_H = [
    [0.0, 0.0, 0.21, 0.21, 0.21, 0.21, 0.0, -0.1, -0.05, -0.1, -0.1, -0.1, -0.1, -0.1, -0.05, -0.1, -0.1, -0.2  , 0.0, 0.0],
    [0.3, 0.6, 0.6, 0.6, 0.6, 0.6, -0.07, -0.07, 0.0, 0.1, 0.1, 0.17, 0.17, 0.17, 0.4, 0.4, 0.4, 0.4  , 0.0, 0.0],
    [0.1, 0.6, 0.6, 0.6, 0.6, 0.6, -0.1, -0.1, -0.05, -0.1, -0.1, 0.17, 0.17, 0.17, 0.4, 0.4, 0.4, 0.4  , 0.0, 0.0],
    [0.1, 0.6, 0.6, 0.6, 0.6, 0.6, -0.1, -0.1, -0.05, -0.1, -0.1, 0.17, 0.17, 0.17, 0.4, 0.4, 0.4, 0.4  , 0.0, 0.0],
    [0.1, 0.6, 0.6, 0.6, 0.6, 0.6, -0.1, -0.1, -0.05, -0.1, -0.1, 0.17, 0.17, 0.17, 0.4, 0.4, 0.4, 0.4  , 0.0, 0.0],
    [0.1, 0.6,  0.6, 0.6, 0.6, 0.6, 0.0, 0.0, -0.2, -0.32, -0.4, 0.17, 0.17, 0.17, 0.4, 0.4, 0.4, 0.4 , 0.0, 0.0],
    [-0.0, 0.0, 0.0, 0.0, 0.0, -0.35, 0.0, -0.1, -0.15, -0.25, -0.3, -0.26, -0.26, -0.26, -0.05, -0.05, -0.05, -0.05 , 0.0, 0.0],
    [-0.0,0.02, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.3, -0.42, -0.5, -0.1, -0.1, -0.1, 0.0, 0.0, 0.0, 0.0  ,0.0 ,0.0 ],
    [0.0,0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.15, 0.15, -0.25, -0.2, -0.3, -0.107, -0.107, -0.107, -0.107    ,0.0 ,0.0],
    [0.0,0.02,  0.0, 0.0, 0.0, 0.15, 0.0, 0.1, 0.2, 0.3, 0.3, -0.2, -0.2, -0.2, -0.15, -0.15, -0.15, -0.15   ,0.0 ,0.0],
    [0.0,0.02,  0.0, 0.0, 0.0, 0.15, 0.0, 0.1, 0.2, 0.3, 0.3, -0.2, -0.2, -0.2, -0.15, -0.15, -0.15, -0.15    ,0.0 ,0.0],
    [0.0,0.32, 0.32, 0.32, 0.32, 0.32, 0.0, 0.0, -0.8, 0.0, 0.0, -0.5, -0.5, -0.5, -0.3, -0.3, -0.3, -0.3      ,0.0 ,0.0],
    [0.0,0.32,  0.32, 0.32, 0.32, 0.32, 0.0, 0.0, -0.85, 0.0, 0.0, -0.5, -0.5, -0.5, -0.3, -0.3, -0.3, -0.3      ,0.0 ,0.0],
    [0.0,0.32,  0.32, 0.32, 0.32, 0.32, 0.0, 0.0, -0.9, 0.0, 0.0, -0.5, -0.5, -0.5, -0.3, -0.3, -0.3, -0.3       ,0.0 ,0.0],
    [0.1,0.0,  1.1, 1.1, 1.1, 1.1, -0.08, -0.08, -0.1, -0.08, -0.08, 0.0, 0.0, 0.0, -0.45, -0.45, -0.45, -0.45       ,0.0 ,0.0],
    [0.1,0.0,   1.1, 1.1, 1.1, 1.1, -0.08, -0.08, -0.1, -0.08, -0.08, 0.0, 0.0, 0.0, -0.45, -0.45, -0.45, -0.45       ,0.0 ,0.0],
    [0.1,0.0,  1.1, 1.1, 1.1, 1.1, -0.08, -0.08, -0.1, -0.08, -0.08, 0.0, 0.0, 0.0, -0.45, -0.45, -0.45, -0.45        ,0.0 ,0.0],
    [0.1,0.0, 1.1, 1.1, 1.1, 1.1, -0.08, -0.08, -0.1, -0.08, -0.08, 0.0, 0.0, 0.0, -0.45, -0.45, -0.45, -0.45         ,0.0 ,0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 , 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  , 0.0, 0.0],
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 , 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  , 0.0, 0.0]
]

# Guardar con encabezado de 1 letra
output_file = "helix_sd_i_4.txt"

with open(output_file, "w") as f:
    f.write("\t".join(aa_order_1) + "\n")
    for row in M_H:
        f.write("\t".join([f"{val:.3f}" for val in row]) + "\n")

print("Archivo generado:", output_file)